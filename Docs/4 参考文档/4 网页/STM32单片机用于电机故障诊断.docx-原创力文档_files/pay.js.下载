;(function (root,$) {
    root.qrcode_pay = {
        version: '1.1.3',
        id: '', //文档id
        cssed: [],
        path: '',
        timers: {
            turning: 0,
            expire: 0,
            again: 0
        },
        status: 'init',
        options: {
            picker: '#qrcode_picker', //配置容器,必选项
            size: 166,//生成二维码的大小,兼容ie最小得148
            create: {
                src: '', //二维码实际字符串接口 必选项
                method: ['alipay','weixin'] //支付可选配置 可选项
            },
            turning: {
                url: '', //轮巡验证是否支付成功接口地址（业务方提供）必选项,
                dataType: 'json', //轮巡请求方式 可选项,
                data: {}, //整个data是一个对象，用于$.ajax请求里面的data参数 必选项，
                delay: 3000, // 轮巡间隔时间，默认是3000 可选项,
                scanned: function(){}, //扫码成功以后的回调方法，可选项,
                update: function(){},
                expire: 10*60*1000 // 默认是10分钟 600000ms 可选项
            },
            cookie: {
                status: false, //是否启用记录cookie订单号，只有游客情况下才记录
                name: '',
                k: '',
                v: '' 
            },
            type: 'down',
            success: function(){}, //支付成功以后的回调方法，必选项,
            refresh: function(){}, //刷新操作，必选项,
            again: function(){},  //查询已扫码过的订单号
            callback: function(){},  //二维码create后执行业务方需要执行的逻辑
            login: function(){}
        },
        plugin: function(_src,callback){
            var that = this,
                _script = document.createElement("script");
            _script.type = "text/javascript";
            _script.src = that.path +  'plugin/' + _src + '?v=' + that.version;
            document.getElementsByTagName('head')[0].appendChild(_script);
            if (!/*@cc_on!@*/0) {
                _script.onload = function () {
                    callback();
                }
            } else {
                _script.onreadystatechange = function () {
                    if (_script.readyState == 'loaded' || _script.readyState == 'complete') {
                        callback();
                    }
                }
            }
        },
        css: function(_href){
            var that = this;
            if( _href && that.cssed.indexOf(_href) == -1 ){
                var css = document.createElement('link');
                css.rel = 'stylesheet';
                css.type = 'text/css';
                css.href =  that.path + 'css/' + _href + '?v=' + that.version;
                document.getElementsByTagName('head')[0].appendChild(css);
                that.cssed.push(_href);
            }
        },
        qrcode: function(){
            var that = this,
                doFun = function(){
                    if( document.getElementById('qrcode_picker_img') ){
                        new QRCode(document.getElementById('qrcode_picker_img'), {
                            text: that.options.create.src,
                            width: that.options.size,
                            height: that.options.size,
                            colorDark : "#000000",
                            colorLight : "#ffffff"
                        });
                    }else{
                        that.create();
                    }
                };
            if(typeof QRCode == 'undefined'){
                that.plugin( 'jquery.qrcode.min.js', function () {
                    doFun();
                });
            }else{
                doFun();
            }
            that.turning();
        },
        setMethod: function(){
            var that = this,
                m = [],
                c = '',
                t = that.options.type == 'down' ? '支付下载' : '付费阅读';
            for( var i = 0; i < that.options.create.method.length; i++ ){
                switch(that.options.create.method[i]){
                    case 'alipay':
                        m.push('支付宝');
                        c += '<i class="icon-alipay"></i>';
                        break;
                    case 'weixin':
                        m.push('微信');
                        c += '<i class="icon-weixin"></i>';
                    break;
                }
            }
            return m.length ? c + ' ' + m.join('/') + '扫码' + t : '';
        },
        init: function(options){
            var that = this;
            that.status = 'init';
            that.options.picker = options.picker || that.options.picker;
            that.path = options.path;
            that.options.create.src = options.create.src;
            that.options.create.method = options.create.method || that.options.create.method;
            that.options.turning.url = options.turning.url || '';
            that.options.turning.dataType = options.turning.dataType || that.options.turning.dataType;
            that.options.turning.data = options.turning.data;
            that.options.turning.delay = options.turning.delay || that.options.turning.delay;
            that.options.turning.scanned = options.turning.scanned || that.options.turning.scanned;
            that.options.turning.expire = options.turning.expire || that.options.turning.expire;
            that.options.turning.expired = options.turning.expired || that.options.turning.expired;
            that.options.turning.update = options.turning.update || that.options.turning.update;
            that.options.cookie = options.cookie || that.options.cookie;
            that.options.type = options.type || that.options.type;
            that.options.success = options.success || that.options.success;
            that.options.refresh = options.refresh || that.options.refresh;
            that.options.again = options.again || that.options.again;
            that.options.login = options.login || that.options.login;
            that.options.size = options.size || that.options.size;
            that.css('pay.css');
            that.create();
            if (jQuery.isFunction(options.callback)){
                options.callback();
            }
        },
        create: function(){
            var that = this,
                m = that.setMethod(),
                c = '<div class="qrcode-container">'+
                        (['vip'].indexOf(that.options.type)<0?'<div class="tip">'+ m +'</div>':'')+
                        '<div class="cavans">'+
                            '<div class="img" id="qrcode_picker_img"></div>'+
                            '<div class="loading"></div>'+
                            '<div class="expire">'+
                                '<span>二维码已失效</span>'+
                                '<a href="javascript:;" title="点击刷新二维码">刷新</a>'+
                            '</div>'+
                            '<div class="scanned">'+
                                '<img src="'+ that.path +'images/scanned.png" width="80"/>'+
                                '<dl>'+
                                    '<dt>扫描成功！<a href="javascript:;" title="点击刷新二维码">重扫</a></dt>'+
                                    '<dd>请在手机上确认支付</dd>'+
                                '</dl>'+
                            '</div>'+
                            '<div class="again"><i></i> 订单查询中，请稍等~</div>'+
                        '</div>'+
                    '</div>';
            $(that.options.picker).html(c);
            setTimeout(function(){
                $(that.options.picker).find('.expire a,.scanned a').on('click',function(){
                    that.refresh();
                });
                that.qrcode();
            },100);
        },
        refresh: function(){
            var that = this;
            clearInterval(that.timers.expire);
            clearInterval(that.timers.turning);
            $(that.options.picker).find('.expire,.scanned').css('display','none');
            $(that.options.picker).find('.loading').css('display','block');
            that.options.refresh();
        },
        login: function(token){
            var that = this;
            clearInterval(that.timers.expire);
            clearInterval(that.timers.turning);
            that.options.login(token);
        },
        turning: function(){
            var that = this;
            clearInterval(that.timers.turning);
            that.timers.turning = setInterval(function () {
                if( $(that.options.picker).is(':visible') ){
                    $.ajax({
                        url: that.options.turning.url,
                        method: 'GET',
                        data: that.options.turning.data,
                        dataType: that.options.turning.dataType,
                        timeout: 3000,
                        success: function(res) {
                            switch(res.code){
                                case 200:
                                    that.success(res.data);
                                break;
                                case 210:
                                    that.expire(0);
                                break;
                                case 220:// 检测到是vip用户+vip文档
                                    that.update();
                                break;
                                case 10001: //未扫描
                                    that.scanned('hide');
                                break;
                                case 10002: //已扫描
                                    that.scanned('show');
                                break;
                                case 1001:
                                case 10011:
                                case 20000:
                                    layer.msg(res.message);
                                    that.refresh();
                                break;
                                case 10010:
                                case 10003:
                                    that.login(res.data.token);
                                break;
                                default:
                                    break;
                            }
                        }
                    });
                }
            },that.options.turning.delay);
            that.expire(that.options.turning.expire);
        },
        update: function(){
            var that = this;
            clearInterval(that.timers.turning);
            clearInterval(that.timers.expire);
            that.options.turning.update && that.options.turning.update();
        },
        expire: function(times){
            var that = this;
            clearTimeout(that.timers.expire);
            that.timers.expire = setTimeout(function () {
                clearInterval(that.timers.turning);
                clearTimeout(that.timers.expire);
                $(that.options.picker).find('.scanned').css('display','none');
                $(that.options.picker).find('.expire').css('display','block');
                that.options.turning.expired && that.options.turning.expired();
            },times);
        },
        scanned: function(status){
            var that = this;
            switch(status){
                case 'show':
                    if( $(that.options.picker).find('.scanned').is(":hidden") ){
                        $(that.options.picker).find('.expire').css('display','none');
                        $(that.options.picker).find('.scanned').css('display','block');
                        that.status = 'scanned';
                        that.setCookieVs();
                        clearTimeout(that.timers.expire);
                        that.options.turning.scanned && that.options.turning.scanned();
                    }
                break;
                case 'hide':
                    if( $(that.options.picker).find('.scanned').is(":visible") ){
                        $(that.options.picker).find('.scanned,.expire').css('display','none');
                        that.expire(that.options.turning.expire);
                        that.status = 'init';
                    }
                break;
            }
        },
        success: function (data) {
            var that = this;
            clearInterval(that.timers.turning);
            clearInterval(that.timers.expire);
            that.options.success(data);
        },
        again: function(){
            var that = this,
                data = {},
                next = false,
                number = 0,
                vs = that.getCookieVs(),
                turning = function(){
                    data[that.options.cookie.k] = vs[0];
                    data.from = 'click_select';
                    data.number = number++;
                    $.ajax({
                        url: that.options.turning.url,
                        method: 'GET',
                        data: data,
                        dataType: that.options.turning.dataType,
                        beforeSend: function(){
                            next = true;
                        },
                        success: function(res) {
                            if( res.code == 200 ){
                                that.success(res.data);
                                next = false;
                            }
                        },
                        complete: function(){
                            if( next ){
                                vs.splice(0,1);
                                if( vs.length ){
                                    turning();
                                }else{
                                    setTimeout(function(){
                                        $(that.options.picker).find('.again').css('display','none');
                                        that.timers.again = 0;
                                        that.options.again();
                                    },500);
                                }
                            }
                        }
                    });
                };
            if( vs.length && that.timers.again == 0){
                that.timers.again = 1;
                $(that.options.picker).find('.again').css('display','block');
                turning();
            }else{
                setTimeout(function(){
                    $(that.options.picker).find('.again').css('display','none');
                    that.timers.again = 0;
                    that.options.again();
                },600);
            }
        },
        getCookieVs: function(){
            var that = this,
                c = that.cookie.get(that.options.cookie.name);
            return c ? c.split(',') : [];
        },
        setCookieVs: function(){
            var that = this,
                vs = that.getCookieVs();
            if( that.options.cookie.status ){
                if( vs.length ){
                    for( var i = 0; i < vs.length; i++ ){
                        if( vs[i].indexOf(that.options.cookie.v) != -1 ){
                            return;
                        }
                    }
                }
                vs.unshift(that.options.cookie.v);
                that.cookie.set(that.options.cookie.name,vs.join(','));
            }
        },
        cookie: {
            get: function(name,_return){
                var nameEQ = name + "=",
                    ca = document.cookie.split(';'),
                    i,
                    c;
                for(i = 0;i < ca.length;i++) {
                    c = ca[i];
                    while ( c.charAt(0 )== ' ' ) c = c.substring(1,c.length);
                    if ( c.indexOf(nameEQ) == 0 ) return c.substring(nameEQ.length,c.length);
                }
                return typeof _return != 'undefined' ? _return : false;
            },
            set: function(name,value,time){
                var date = new Date(),
                    expires = '';
                if( time == 0 ){
                    date = 'Fri, 31 Dec 9999 23:59:59 GMT';
                }else if( time > 0 ){
                    date.setTime( date.getTime() + time );
                    date = date.toUTCString();
                }else{
                    date.setTime( date.getTime() + 1 * ( 24 - date.getTimezoneOffset()/60 ) * 60 * 60 * 1000 );
                    date = date.toUTCString();
                }
                expires ="; expires = " + date;
                document.cookie = name + "=" + value + expires + "; path=/";
            }
        }
    }
})(window,jQuery);
